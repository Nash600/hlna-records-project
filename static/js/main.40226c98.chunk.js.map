{"version":3,"sources":["Search.js","TopAlbums.js","TopTracks.js","Track.js","Album.js","Artist.js","App.js","serviceWorker.js","index.js"],"names":["Search","state","tracks","formData","title","artist","handleChange","event","userInput","target","value","name","newFormData","Object","assign","_this","setState","handleSubmitArtist","preventDefault","artistSearch","handleSubmitTitle","axios","method","url","concat","then","response","data","results","trackmatches","track","catch","react_default","a","createElement","className","this","map","index","key","react_router_dom","to","pathname","mbid","image","onSubmit","for","class","placeholder","onChange","Component","TopAlbums","albums","_this2","get","res","loved","error","console","log","id","data-ride","album","idAlbum","src","strAlbumThumb","alt","href","role","data-slide","aria-hidden","TopTracks","top50Tracks","allTrack","strMusicBrainzID","strTrackThumb","strTrack","Track","props","match","params","type","strArtist","location","Album","getAlbumTracks","_this3","strAlbum","Artist","artistName","getArtistAlbums","artists","strArtistBanner","strArtistThumb","strGenre","strBiographyEN","strCountry","strWebsite","width","height","length","App","Fragment","react_router","exact","path","component","src_TopTracks","src_TopAlbums","src_Search","Boolean","window","hostname","AppJsx","src_App_0","rootElement","document","getElementById","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.40226c98.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport axios from 'axios'\nimport { Link } from \"react-router-dom\";\n\nclass Search extends Component {\n\n  state = {\n    tracks: [],\n    formData: {\n      title: '',\n      artist:''\n    }\n  }\n\n  handleChange = event => {\n    //get the user's input\n    const userInput = event.target.value;\n    //get which input they typed in\n    const name = event.target.name;\n    //copy the state of formData\n    const newFormData = Object.assign(this.state.formData);\n    //update the key in formData copy with the new value\n    newFormData[name] = userInput;\n    //set the state with the updated formData\n    this.setState({\n      formData: newFormData\n    });\n  };\n\n  handleSubmitArtist = event => {\n    // this.setState({event: this.state.formData.artist})\n    //prevent default action\n    event.preventDefault()\n    const artist = this.state.formData.artist\n    this.setState({\n      artistSearch: artist\n    });\n  }\n\n  handleSubmitTitle = event => {\n    this.setState({event: this.state.formData.title})\n      //prevent default action\n      event.preventDefault();\n  \n  \n    //get the formData\n    const title = this.state.formData.title\n    axios({\n      method: \"get\", \n      url: `https://cors-anywhere.herokuapp.com/https://ws.audioscrobbler.com//2.0/?method=track.search&track=${title}&api_key=fa6d7c53999a32c59ed71bb3d371ea07&format=json`\n  \n       })\n  \n      .then(response =>{\n        this.setState({\n        tracks: response.data.results.trackmatches.track\n        })\n      })\n\n      .catch()\n  }\n\n  render() {\n    return (\n      <div className=\"Search\">\n        <ul>\n     \n          {this.state.tracks.map((track, index) => (\n            <li key={index}>\n              <Link to={{\n                pathname: `/track/${track.mbid}`,\n              state: {\n                image: track.image[2][\"#text\"]\n              }\n            }}>\n                {track.name}: {track.artist}\n              </Link>\n            </li>\n          ))}\n        </ul>\n\n        {this.state.artistSearch ? (\n          <Link to={`/artist/${this.state.artistSearch}`}>\n            {this.state.artistSearch}\n          </Link>\n        ) : (\n          // <Artist\n          //   key={this.state.artistSearch}\n          //   artistName={this.state.artistSearch}\n          // />\n          \"\"\n        )}\n\n        <form onSubmit={this.handleSubmitTitle}>\n        <label for=\"Search Tracks\"><br /></label>\n          <input class='box'\n        \n            placeholder=\"Search Tracks\"\n            name=\"title\"\n            value={this.state.formData.title}\n            onChange={this.handleChange}\n          />\n        </form>\n        <form onSubmit={this.handleSubmitArtist}>\n        <label for=\"Search Tracks\"><br /></label>\n          <input class='box'\n            placeholder=\"Find Artist\"\n            name=\"artist\"\n            value={this.state.formData.artist}\n            onChange={this.handleChange}\n          />\n        </form>\n      </div>\n    );\n  }\n}\n\n\nexport default Search;\n","import React, { Component } from \"react\";\nimport axios from 'axios';\nimport { Link } from \"react-router-dom\";\n\n\nclass TopAlbums extends Component {\n  \n  state = {\n    albums: []\n}\n\n  componentWillMount() {\n    // API calls\n\n    axios.get(`https://theaudiodb.com/api/v1/json/1/mostloved.php?format=album`)\n    .then(res => {\n       const albums = res.data.loved\n     this.setState({ albums:albums });\n    })\n    .catch(error=> console.log(error))\n  }\n  render() {\n    return (\n      \n        <div id=\"album\" className=\"carousel slide\" data-ride=\"carousel\">\n         \n          <div className=\"carousel-inner album\">\n          {this.state.albums.map((album, index) => (\n            <div className={`carousel-item ${index === 0 ? \"active\" : \"\"}`}>\n              <Link to={`/album/${album.idAlbum}`}>\n                <img\n                    src={album.strAlbumThumb}\n                  className=\"d-block w-100\"\n                  alt=\"NO IMG\"\n                />\n              </Link>\n            </div>\n          ))}\n\n          </div>\n          <a class=\"carousel-control-prev\" href=\"#album\" role=\"button\" data-slide=\"prev\">\n            <span class=\"carousel-control-prev-icon\" aria-hidden=\"true\"></span>\n            <span class=\"sr-only\">Previous</span>\n          </a>\n          <a class=\"carousel-control-next\" href=\"#album\" role=\"button\" data-slide=\"next\">\n            <span class=\"carousel-control-next-icon\" aria-hidden=\"true\"></span>\n            <span class=\"sr-only\">Next</span>\n          </a>\n        </div>\n        \n    )\n \n    }\n  }\n\n\nexport default TopAlbums ","import React,{Component} from 'react'\nimport axios from 'axios'\nimport {Link} from 'react-router-dom'\nimport \"../node_modules/bootstrap/dist/css/bootstrap.min.css\";\n\nclass TopTracks extends Component{\n    state = {\n        top50Tracks:[],\n      }\n      componentWillMount() {\n        // API calls\n        axios({\n          method: 'get',\n          url: `https://www.theaudiodb.com/api/v1/json/1/mostloved.php?format=track`\n        })\n        .then(response => {\n          const allTrack = response.data.loved\n          this.setState({\n            top50Tracks: allTrack\n          })\n        })\n      }\n    render(){\n        return (\n          <div\n            id=\"track\"\n            className=\"carousel slide\"\n            data-ride=\"carousel\"\n          >\n            <div className=\"carousel-inner album\">\n              {this.state.top50Tracks.map((track, index) => (\n                <div\n                  className={`carousel-item ${\n                    index === 0 ? \"active\" : \"\"\n                  }`}\n                >\n                  <Link to={{\n                    pathname:`/track/${track.strMusicBrainzID}`,\n                    state:{\n                      image:track.strTrackThumb\n                    }\n                  }}>\n\n                    {track.strTrackThumb != null ? (\n                      <img\n                       src={track.strTrackThumb}\n                        className=\"d-block w-100\"\n                        alt=\"NO IMG\"\n                      />\n                    ) : (\n                      <div class=\"container\">\n                        { <img\n                          src=\"http://citasantehnika.lv/content/images/default-image.gif\"\n                          className=\"d-block w-100 image\"\n                          alt=\"IMG\"\n                        /> }\n\n                        <div class=\"centered\">{track.strTrack}</div>\n                      </div>\n                    )}\n                    \n                  </Link>\n                </div>\n              ))}\n            </div>\n            <a\n              class=\"carousel-control-prev\"\n              href=\"#track\"\n              role=\"button\"\n              data-slide=\"prev\"\n            >\n              <span\n                class=\"carousel-control-prev-icon\"\n                aria-hidden=\"true\"\n              />\n              <span class=\"sr-only\">Previous</span>\n            </a>\n            <a\n              class=\"carousel-control-next\"\n              href=\"#track\"\n              role=\"button\"\n              data-slide=\"next\"\n            >\n              <span\n                class=\"carousel-control-next-icon\"\n                aria-hidden=\"true\"\n              />\n              <span class=\"sr-only\">Next</span>\n            </a>\n          </div>\n        );\n        \n    }\n}\n\nexport default TopTracks;","import React,{Component} from 'react'\nimport axios from 'axios'\nimport {Link} from \"react-router-dom\";\n\nclass Track extends Component {\n  state = {\n    track: \"\"\n  };\n  componentWillMount(){\n      axios({\n          method: 'get',\n          url:`https://theaudiodb.com/api/v1/json/195187/track-mb.php?i=${this.props.match.params.id}`\n      })\n      .then(response => {\n          console.log(response)\n          if(response.data.track != null){\n          this.setState({\n              track: response.data.track[0]}) \n          }\n           \n      })\n  }\n  render() {\n    console.log(!this.state.track)\n    if (this.state.track){\n    return (\n             \n      <div className='singleTracks'>\n\n        <Link to=\"/\"><button type=\"button\" className=\"btn btn-dark btn-lg btn-block home\">\n                   Home\n                 </button></Link>\n\n        \n      \n        <p class='card-title'>{this.state.track.strTrack}</p> \n        <Link to={`/artist/${this.state.track.strArtist}`}>\n          <h5 class='card-title' id='art'>{this.state.track.strArtist}</h5>\n        </Link>\n        \n        {this.state.track.strTrackThumb ? <img src={this.state.track.strTrackThumb} alt=\"\" /> : <img src={this.props.location.state.image} alt=\"\" /> }\n             \n     </div>\n    )} else {\n      return (<div className=\"notfound\">not found</div>)\n    }\n  }\n}\nexport default Track;","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport Track from './Track'\nimport {Link} from \"react-router-dom\";\n\n\n/////////////////////////////\n// use this component in top albums , pass down album id as props\n////////////////////////////\nclass Album extends Component {\n    state={\n        album: {},\n        tracks: []\n    }\n    componentWillMount(){\n        // album id is passed as props\n        //api call to get an album using album id\n        axios({\n          method: \"get\",\n          url: `https://theaudiodb.com/api/v1/json/195187/album.php?m=${\n            this.props.match.params.id}`\n        })\n          // save album info in state\n          .then(response => {\n            console.log(response)\n            const album = response.data.album[0];\n            this.setState({ album });\n\n        this.getAlbumTracks();\n\n\n          })\n          .catch(error => {console.log(\"Album error #############\")});\n                       \n    }\ngetAlbumTracks =()=>{\n      axios({\n        method: \"get\",\n        url: `https://theaudiodb.com/api/v1/json/195187/track.php?m=2147383&m=${\n          this.state.album.idAlbum\n        }`\n        // https://theaudiodb.com/api/v1/json/195187/track.php?m=2147383&m=2147383\n      })\n        .then(response => {\n          console.log(response);\n          const tracks = response.data.track;\n          console.log(response.data.track);\n          \n          console.log(tracks);\n          this.setState({ tracks });\n        })\n        .catch(error => {\n          console.log(\"error ########## tracks\");\n          console.log(error);\n        });\n  }\n    render(){\n        // use state to view album info\n        return (\n          <div>\n            <Link to=\"/\"><button type=\"button\" className=\"btn btn-dark btn-lg btn-block home\">\n                   Home\n                 </button></Link>\n                 <div>\n                 <h5 class='card-title'> {this.state.album.strAlbum}</h5>\n            {/* <p>artist name: {this.state.album.strArtist}</p> */}\n            {/* \n            DONE \n             */}\n            <Link to={`/artist/${this.state.album.strArtist}`}>\n              <h5 class='card-title' id='art' > {this.state.album.strArtist}</h5>\n            </Link>\n            <img className=\"thumb cardImg\" src={this.state.album.strAlbumThumb} alt=\"\" />\n             </div>\n             <div className='tr'>\n               <br />\n            <h3 class='title'>Tracks</h3>\n            {this.state.tracks.map(track => (\n\n              <Link to={{\n\n                pathname: `/track/${track.strMusicBrainzID}`,\n                state: {\n                  image: this.state.album.strAlbumThumb\n                }\n              }}> \n                <p class='list'>{track.strTrack}</p>\n                \n\n              </Link>\n            ))}\n          </div></div>\n\n            \n    \n         \n          \n\n        );\n            }\n            \n}\n\nexport default Album;","import React, {Component} from 'react'\nimport axios from 'axios'\n// import Album from './Album'\nimport { Link } from \"react-router-dom\";\nimport './styles.css'\n\n// import css\n\nclass Artist extends Component {\n  state = {\n    artist: {},\n    artistName: \"\", // taken from search form\n    albums: [] \n  };\n  componentWillMount() {\n    axios({\n      method: \"get\",\n      url: `https://www.theaudiodb.com/api/v1/json/195187/search.php?s=${\n        this.props.match.params.name}`\n      //\n    })\n      .then(response => {\n        console.log(response);\n        const artist = response.data.artists[0];\n        this.setState({ artist });\n        //   const artistName = this.props.artist.strArtist.replace(/\\s/g, \"\");\n        //   this.setState({ artistName });\n\n        this.getArtistAlbums();\n      })\n      .catch(error => {});\n  }\n \n  getArtistAlbums =()=>{\n      axios({\n        method: \"get\",\n        url: `https://theaudiodb.com/api/v1/json/195187/searchalbum.php?s=${\n          this.state.artist.strArtist\n        }`\n      })\n        .then(response => {\n          // console.log(response);\n          const albums = response.data.album;\n          // console.log(response.data.album);\n          \n          console.log(albums);\n          this.setState({ albums });\n        })\n        .catch(error => {\n          console.log(\"error ########## albums\");\n          console.log(error);\n        });\n  }\n\n  render() {\n             return (\n               <div className=\"Artist\">\n                \n                 <img\n                   className=\"banner\"\n                   src={this.state.artist.strArtistBanner}\n                   alt=\"no img\"\n                 />\n                 <br/>\n                 <Link to=\"/\"><button type=\"button\" className=\"btn btn-dark btn-lg btn-block home\">\n                   Home\n                 </button></Link>\n                 <div className=\"info\">\n                 <div className=\"Card\">\n                   <img\n                     className=\"thumb cardImg\"\n                     src={this.state.artist.strArtistThumb}\n                     alt=\"no img\"\n                     \n                   />\n                   <div id='bio'>\n                   <h1>\n                     {this.state.artist.strArtist}\n                   </h1>\n                   <h2>Genre</h2>\n                   <p>\n                     {this.state.artist.strGenre}\n                   </p>\n                   <h2>Biography</h2>\n                   <p>\n                     {this.state.artist.strBiographyEN}\n                   </p>\n                   <h2>Country</h2>\n                   <p>\n                     {this.state.artist.strCountry}\n                   </p>\n                   <h2>\n                   <a id='web' href={this.state.artist.strWebsite}>\n                    Website\n                   </a></h2>\n                   </div>\n                   \n                   </div>\n                   <br/><br/><br/>\n                   {/* <Albums artistName={this.state.artist.name} /> */}\n                   <h2 className='Title'>Albums</h2>\n                   <br/><br/>\n                   <div className=\"bd-example\">\n                   \n        <div id=\"carouselExampleCaptions\" className=\"carousel slide\" data-ride=\"carousel\">\n         \n          <div className=\"carousel-inner album\">\n          {this.state.albums.map((album, index) => (\n            <div className={`carousel-item ${index === 0 ? \"active\" : \"\"}`}>\n            <Link to={`/album/${album.idAlbum}`}>\n            {album.strAlbumThumb != null ? (<div>\n          <img src={album.strAlbumThumb}   width=\"700px\" height=\"700px\"/>{album.strAlbumThumb.length ? '':<div class=\"centered\">{album.strAlbum}</div>}</div>): (\n                      <div class=\"container\">\n                        <img\n                          src=\"http://citasantehnika.lv/content/images/default-image.gif\"\n                          className=\"d-block w-100 image\"\n                          alt=\"IMG\" width=\"700px\" height=\"700px\"\n                        />\n                        <div class=\"centered\">{album.strAlbum}</div>\n                      </div>\n                    )}\n          </Link>\n          </div>\n            \n          ))}\n</div>\n          <a class=\"carousel-control-prev\" href=\"#carouselExampleCaptions\" role=\"button\" data-slide=\"prev\">\n            <span class=\"carousel-control-prev-icon\" aria-hidden=\"true\"></span>\n            <span class=\"sr-only\">Previous</span>\n          </a>\n          <a class=\"carousel-control-next\" href=\"#carouselExampleCaptions\" role=\"button\" data-slide=\"next\">\n            <span class=\"carousel-control-next-icon\" aria-hidden=\"true\"></span>\n            <span class=\"sr-only\">Next</span>\n          </a>\n        </div>\n      </div>\n                   {/* <Album key={album.idAlbum} albumId={album.idAlbum}/> */}\n\n                   {/* <img\n                   src={this.state.artist.strArtistLogo}\n                   alt=\"no img\"\n                 />\n\n                 <img\n                   src={this.state.artist.strArtistClearart}\n                   alt=\"no img\"\n                 />\n                 <img\n                   src={this.state.artist.strArtistWideThumb}\n                   alt=\"no img\"\n                 />\n                 <img\n                   src={this.state.artist.strArtistFanart}\n                   alt=\"no img\"\n                 />\n                 <img\n                   src={this.state.artist.strArtistFanart2}\n                   alt=\"no img\"\n                 />\n                 <img\n                   src={this.state.artist.strArtistFanart3}\n                   alt=\"no img\"\n                 /> */}\n                 </div>\n               </div>\n             );\n           }\n}\nexport default Artist;\n\n//  componentDidMount() {\n    // axios({\n    //     method: 'get',\n    //     url: `https://www.theaudiodb.com/api/v1/json/1/search.php?s=${this.state.name}`\n    // })\n    // .then(response =>{\n    //                    console.log(response.data.artists[0].strArtistThumb);\n    //                    const image =\n    //                      response.data.artists[0]\n    //                        .strArtistThumb;\n    //                    this.setState({ image });\n    //                  })\n    // .catch(error=>{\n    //     console.log(\"########## error run\")\n    // })\n//   }\n\n  // getArtist =()=> {\n       \n\n  //   if (!this.state.artistName){\n  //     console.log(\"no result\")\n  //   } else {\n  //   axios({\n  //     method: \"get\",\n  //     url: `https://www.theaudiodb.com/api/v1/json/195187/search.php?s=${this.state.artistName}`\n  //     //\n  //   })\n  //     .then(response => {\n        \n  //                         console.log(response);\n  //                         const artist =\n  //                           response.data.artists[0];\n  //                         this.setState({ artist });\n                        \n  //                       })\n  //     .catch(error => {});\n  //                     }\n  // }\n\n\n\n  ","import React, { Component } from \"react\";\nimport $ from \"jquery\";\nimport Popper from 'popper.js';\nimport \"../node_modules/bootstrap/dist/css/bootstrap.min.css\";\nimport \"../node_modules/bootstrap/dist/js/bootstrap.js\";\nimport './style.css'\nimport \"./App.css\";\nimport { Route, Link } from \"react-router-dom\";\n// import components\nimport Search from './Search'\nimport TopAlbums from './TopAlbums'\nimport TopTracks from './TopTracks'\nimport Track from \"./Track\";\nimport Album from \"./Album\";\nimport Artist from \"./Artist\";\n//import Nav from \"./Nav\";\n\n\n\n\nclass App extends Component {\n\n\n  render() {\n\n    const Main = () => (\n      <div className=\"App\">\n        <header>\n          <h1 className=\"header\">HLNA Records</h1>\n        </header>\n        <div className=\"image\" />\n        <div className=\"container\">\n          <h1 className=\"tracks\">Top Tracks</h1>\n\n          <TopTracks />\n          <br />\n\n          <h1 className=\"albums\">Top Albums</h1>\n          <TopAlbums />\n          <br />\n          <h1 className=\"albums\">Search</h1>\n          <Search />\n        </div>\n      </div>\n    );\n    return (\n      <React.Fragment>\n\n        <Route exact path=\"/track/:id\" component={Track} />\n        <Route exact path=\"/album/:id\" component={Album} />\n        <Route exact path=\"/artist/:name\" component={Artist} />\n        <Route exact path=\"/search/:name\" component={Search} />\n        <Route exact path=\"/\" component={Main} />\n      </React.Fragment>\n    );\n      \n  }\n  \n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { HashRouter } from \"react-router-dom\";\nconst AppJsx = (\n  <HashRouter>\n    <App />\n  </HashRouter>\n);\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(AppJsx, rootElement);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}
{"version":3,"sources":["Search.js","TopAlbums.js","TopTracks.js","Track.js","Album.js","Artist.js","App.js","serviceWorker.js","index.js"],"names":["Search","state","tracks","formData","title","artist","handleChange","event","userInput","target","value","name","newFormData","Object","assign","_this","setState","handleSubmitArtist","preventDefault","artistSearch","handleSubmitTitle","axios","method","url","concat","then","response","data","results","trackmatches","track","catch","react_default","a","createElement","className","this","map","index","key","react_router_dom","to","mbid","onSubmit","for","class","placeholder","onChange","Component","TopAlbums","albums","_this2","get","res","loved","id","data-ride","album","idAlbum","src","strAlbumThumb","alt","href","role","data-slide","aria-hidden","TopTracks","top50Tracks","allTrack","strMusicBrainzID","strTrackThumb","strTrack","Track","props","match","params","console","log","strArtist","Album","getAlbumTracks","error","strAlbum","Artist","artistName","getArtistAlbums","artists","strArtistBanner","strArtistThumb","strGenre","strBiographyEN","strCountry","strWebsite","App","Fragment","react_router","exact","path","component","src_TopTracks","src_TopAlbums","src_Search","Boolean","window","location","hostname","AppJsx","src_App_0","rootElement","document","getElementById","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3437e6a6.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport axios from 'axios'\nimport { Link } from \"react-router-dom\";\n\nclass Search extends Component {\n\n  state = {\n    tracks: [],\n    formData: {\n      title: '',\n      artist:''\n    }\n  }\n\n  handleChange = event => {\n    //get the user's input\n    const userInput = event.target.value;\n    //get which input they typed in\n    const name = event.target.name;\n    //copy the state of formData\n    const newFormData = Object.assign(this.state.formData);\n    //update the key in formData copy with the new value\n    newFormData[name] = userInput;\n    //set the state with the updated formData\n    this.setState({\n      formData: newFormData\n    });\n  };\n\n  handleSubmitArtist = event => {\n    // this.setState({event: this.state.formData.artist})\n    //prevent default action\n    event.preventDefault()\n    const artist = this.state.formData.artist\n    this.setState({\n      artistSearch: artist\n    });\n  }\n\n  handleSubmitTitle = event => {\n    this.setState({event: this.state.formData.title})\n      //prevent default action\n      event.preventDefault();\n  \n  \n    //get the formData\n    const title = this.state.formData.title\n    axios({\n      method: \"get\", \n      url: `https://cors-anywhere.herokuapp.com/https://ws.audioscrobbler.com//2.0/?method=track.search&track=${title}&api_key=fa6d7c53999a32c59ed71bb3d371ea07&format=json`\n  \n       })\n  \n      .then(response =>{\n        this.setState({\n        tracks: response.data.results.trackmatches.track\n        })\n      })\n\n      .catch()\n  }\n\n  render() {\n    return (\n      <div className=\"Search\">\n        <ul>\n          {this.state.tracks.map((track, index) => (\n            <li key={index}>\n              <Link to={`/track/${track.mbid}`}>\n                {track.name}: {track.artist}\n              </Link>\n            </li>\n          ))}\n        </ul>\n\n        {this.state.artistSearch ? (\n          <Link to={`/artist/${this.state.artistSearch}`}>\n            {this.state.artistSearch}\n          </Link>\n        ) : (\n          // <Artist\n          //   key={this.state.artistSearch}\n          //   artistName={this.state.artistSearch}\n          // />\n          \"\"\n        )}\n\n        <form onSubmit={this.handleSubmitTitle}>\n        <label for=\"Search Tracks\"><br /></label>\n          <input class='box'\n        \n            placeholder=\"Search Tracks\"\n            name=\"title\"\n            value={this.state.formData.title}\n            onChange={this.handleChange}\n          />\n        </form>\n        <form onSubmit={this.handleSubmitArtist}>\n        <label for=\"Search Tracks\"><br /></label>\n          <input class='box'\n            placeholder=\"Find Artist\"\n            name=\"artist\"\n            value={this.state.formData.artist}\n            onChange={this.handleChange}\n          />\n        </form>\n      </div>\n    );\n  }\n}\n\n\nexport default Search;\n","import React, { Component } from \"react\";\nimport axios from 'axios';\nimport { Link } from \"react-router-dom\";\n\n\nclass TopAlbums extends Component {\n  \n  state = {\n    albums: []\n}\n\n  componentWillMount() {\n    // API calls\n\n    axios.get(`http://theaudiodb.com/api/v1/json/1/mostloved.php?format=album`)\n    .then(res => {\n       const albums = res.data.loved\n     this.setState({ albums:albums });\n    })\n  }\n  render() {\n    return (\n      <div\n        id=\"carouselExampleCaptions\"\n        className=\"carousel slide\"\n        data-ride=\"carousel\"\n      >\n        <div className=\"carousel-inner album\">\n          {this.state.albums.map((album, index) => (\n            <div className={`carousel-item ${index === 0 ? \"active\" : \"\"}`}>\n              <Link to={`/album/${album.idAlbum}`}>\n                <img\n                  src={album.strAlbumThumb}\n                  className=\"d-block w-100\"\n                  alt=\"NO IMG\"\n                />\n              </Link>\n            </div>\n          ))}\n        </div>\n        <a\n          class=\"carousel-control-prev\"\n          href=\"#carouselExampleCaptions\"\n          role=\"button\"\n          data-slide=\"prev\"\n        >\n          <span class=\"carousel-control-prev-icon\" aria-hidden=\"true\" />\n          <span class=\"sr-only\">Previous</span>\n        </a>\n        <a\n          class=\"carousel-control-next\"\n          href=\"#carouselExampleCaptions\"\n          role=\"button\"\n          data-slide=\"next\"\n        >\n          <span class=\"carousel-control-next-icon\" aria-hidden=\"true\" />\n          <span class=\"sr-only\">Next</span>\n        </a>\n      </div>\n    );\n \n    }\n  }\n\n\nexport default TopAlbums ","import React,{Component} from 'react'\nimport axios from 'axios'\nimport {Link} from 'react-router-dom'\nimport \"../node_modules/bootstrap/dist/css/bootstrap.min.css\";\n\nclass TopTracks extends Component{\n    state = {\n        top50Tracks:[],\n      }\n      componentWillMount() {\n        // API calls\n        axios({\n          method: 'get',\n          url: `https://www.theaudiodb.com/api/v1/json/1/mostloved.php?format=track`\n        })\n        .then(response => {\n          const allTrack = response.data.loved\n          this.setState({\n            top50Tracks: allTrack\n          })\n        })\n      }\n    render(){\n        return (\n          <div\n            id=\"carouselExampleCaptions\"\n            className=\"carousel slide\"\n            data-ride=\"carousel\"\n          >\n            <div className=\"carousel-inner album\">\n              {this.state.top50Tracks.map((track, index) => (\n                <div\n                  className={`carousel-item ${\n                    index === 0 ? \"active\" : \"\"\n                  }`}\n                >\n                  <Link to={`/track/${track.strMusicBrainzID}`}>\n                    {track.strTrackThumb != null ? (\n                      <img\n                        src={track.strTrackThumb}\n                        className=\"d-block w-100\"\n                        alt=\"NO IMG\"\n                      />\n                    ) : (\n                      <div class=\"container\">\n                        <img\n                          src=\"http://citasantehnika.lv/content/images/default-image.gif\"\n                          className=\"d-block w-100 image\"\n                          alt=\"IMG\"\n                        />\n                        <div class=\"centered\">{track.strTrack}</div>\n                      </div>\n                    )}\n                  </Link>\n                </div>\n              ))}\n            </div>\n            <a\n              class=\"carousel-control-prev\"\n              href=\"#carouselExampleCaptions\"\n              role=\"button\"\n              data-slide=\"prev\"\n            >\n              <span\n                class=\"carousel-control-prev-icon\"\n                aria-hidden=\"true\"\n              />\n              <span class=\"sr-only\">Previous</span>\n            </a>\n            <a\n              class=\"carousel-control-next\"\n              href=\"#carouselExampleCaptions\"\n              role=\"button\"\n              data-slide=\"next\"\n            >\n              <span\n                class=\"carousel-control-next-icon\"\n                aria-hidden=\"true\"\n              />\n              <span class=\"sr-only\">Next</span>\n            </a>\n          </div>\n        );\n        \n    }\n}\n\nexport default TopTracks;","import React,{Component} from 'react'\nimport axios from 'axios'\nimport {Link} from \"react-router-dom\";\n\nclass Track extends Component {\n  state = {\n    track: \"\"\n  };\n  componentWillMount(){\n      axios({\n          method: 'get',\n          url:`https://theaudiodb.com/api/v1/json/195187/track-mb.php?i=${this.props.match.params.id}`\n      })\n      .then(response => {\n          console.log(response)\n          if(response.data.track != null){\n          this.setState({\n              track: response.data.track[0]}) \n          }\n           \n      })\n  }\n  render() {\n    console.log(!this.state.track)\n    if (this.state.track){\n    return (\n             \n      <div className='singleTracks'>\n        <Link to=\"/\">Home</Link>\n\n        {/* <h1>this is track page</h1> */}\n      \n        {/* <h1>this is track page</h1> */}\n        {/* {this.props.match.params.id} */}\n      \n        \n\n        <p>{this.state.track.strTrack}</p>\n\n        <img src={this.state.track.strTrackThumb} alt=\"\" />\n\n        <Link to={`/artist/${this.state.track.strArtist}`}>\n          <p>{this.state.track.strArtist}</p>\n        </Link>\n        \n     \n     </div>\n    )} else {\n      return (<p>not found</p>)\n    }\n  }\n}\nexport default Track;","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport {Link} from \"react-router-dom\";\n\n\n/////////////////////////////\n// use this component in top albums , pass down album id as props\n////////////////////////////\nclass Album extends Component {\n    state={\n        album: {},\n        tracks: []\n    }\n    componentWillMount(){\n        // album id is passed as props\n        //api call to get an album using album id\n        axios({\n          method: \"get\",\n          url: `https://theaudiodb.com/api/v1/json/195187/album.php?m=${\n            this.props.match.params.id}`\n        })\n          // save album info in state\n          .then(response => {\n            console.log(response)\n            const album = response.data.album[0];\n            this.setState({ album });\n\n        this.getAlbumTracks();\n\n\n          })\n          .catch(error => {console.log(\"Album error #############\")});\n                       \n    }\ngetAlbumTracks =()=>{\n      axios({\n        method: \"get\",\n        url: `https://theaudiodb.com/api/v1/json/195187/track.php?m=2147383&m=${\n          this.state.album.idAlbum\n        }`\n        // https://theaudiodb.com/api/v1/json/195187/track.php?m=2147383&m=2147383\n      })\n        .then(response => {\n          console.log(response);\n          const tracks = response.data.track;\n          console.log(response.data.track);\n          \n          console.log(tracks);\n          this.setState({ tracks });\n        })\n        .catch(error => {\n          console.log(\"error ########## tracks\");\n          console.log(error);\n        });\n  }\n    render(){\n        // use state to view album info\n        return (\n          <div>\n            <Link to=\"/\">Home</Link>\n            <p>Album Name: {this.state.album.strAlbum}</p>\n            {/* <p>artist name: {this.state.album.strArtist}</p> */}\n            {/* \n            DONE \n             */}\n            <Link to={`/artist/${this.state.album.strArtist}`}>\n              <p>Artist Name: {this.state.album.strArtist}</p>\n            </Link>\n            <img src={this.state.album.strAlbumThumb} alt=\"\" />\n\n            <p>Albums' Tracks</p>\n            {this.state.tracks.map(track => (\n              <Link to={`/track/${track.strMusicBrainzID}`}> \n                {track.strTrackThumb == null? (<p> {track.strTrack}</p>)\n                : (<img src={track.strTrackThumb} alt=\"\" />)}\n              </Link>\n            ))}\n          </div>\n        );\n            }\n            \n}\n\nexport default Album;","import React, {Component} from 'react'\nimport axios from 'axios'\n// import Album from './Album'\nimport { Link } from \"react-router-dom\";\n\n// import css\n\nclass Artist extends Component {\n  state = {\n    artist: {},\n    artistName: \"\", // taken from search form\n    albums: [] \n  };\n  componentWillMount() {\n    axios({\n      method: \"get\",\n      url: `https://www.theaudiodb.com/api/v1/json/195187/search.php?s=${\n        this.props.match.params.name}`\n      //\n    })\n      .then(response => {\n        console.log(response);\n        const artist = response.data.artists[0];\n        this.setState({ artist });\n        //   const artistName = this.props.artist.strArtist.replace(/\\s/g, \"\");\n        //   this.setState({ artistName });\n\n        this.getArtistAlbums();\n      })\n      .catch(error => {});\n  }\n \n  getArtistAlbums =()=>{\n      axios({\n        method: \"get\",\n        url: `https://theaudiodb.com/api/v1/json/195187/searchalbum.php?s=${\n          this.state.artist.strArtist\n        }`\n      })\n        .then(response => {\n          console.log(response);\n          const albums = response.data.album;\n          console.log(response.data.album);\n          \n          console.log(albums);\n          this.setState({ albums });\n        })\n        .catch(error => {\n          console.log(\"error ########## albums\");\n          console.log(error);\n        });\n  }\n\n  render() {\n             return (\n               <div className=\"Artist\">\n                 <Link to=\"/\">\n                   Home\n                 </Link>\n                \n                 <img\n                   className=\"banner\"\n                   src={this.state.artist.strArtistBanner}\n                   alt=\"no img\"\n                 />\n\n                 <div className=\"info\">\n                   <img\n                     className=\"thumb\"\n                     src={this.state.artist.strArtistThumb}\n                     alt=\"no img\"\n                   />\n                   <p>\n                     Artist name :{this.state.artist.strArtist}\n                   </p>\n                   <p>\n                     Artist genre :{this.state.artist.strGenre}\n                   </p>\n                   <p>\n                     Artist Biography :\n                     {this.state.artist.strBiographyEN}\n                   </p>\n                   <p>\n                     Artist Country :{this.state.artist.strCountry}\n                   </p>\n                   <a href={this.state.artist.strWebsite}>\n                     Artist Website\n                   </a>\n\n                   {/* <Albums artistName={this.state.artist.name} /> */}\n                   <p>Artist's Albums</p>\n                   {this.state.albums.map(album => (\n                     <Link to={`/album/${album.idAlbum}`}>\n                       <img src={album.strAlbumThumb} alt=\"\" />\n                     </Link>\n                   ))}\n                   {/* <Album key={album.idAlbum} albumId={album.idAlbum}/> */}\n\n                   {/* <img\n                   src={this.state.artist.strArtistLogo}\n                   alt=\"no img\"\n                 />\n\n                 <img\n                   src={this.state.artist.strArtistClearart}\n                   alt=\"no img\"\n                 />\n                 <img\n                   src={this.state.artist.strArtistWideThumb}\n                   alt=\"no img\"\n                 />\n                 <img\n                   src={this.state.artist.strArtistFanart}\n                   alt=\"no img\"\n                 />\n                 <img\n                   src={this.state.artist.strArtistFanart2}\n                   alt=\"no img\"\n                 />\n                 <img\n                   src={this.state.artist.strArtistFanart3}\n                   alt=\"no img\"\n                 /> */}\n                 </div>\n               </div>\n             );\n           }\n}\nexport default Artist;\n\n//  componentDidMount() {\n    // axios({\n    //     method: 'get',\n    //     url: `https://www.theaudiodb.com/api/v1/json/1/search.php?s=${this.state.name}`\n    // })\n    // .then(response =>{\n    //                    console.log(response.data.artists[0].strArtistThumb);\n    //                    const image =\n    //                      response.data.artists[0]\n    //                        .strArtistThumb;\n    //                    this.setState({ image });\n    //                  })\n    // .catch(error=>{\n    //     console.log(\"########## error run\")\n    // })\n//   }\n\n  // getArtist =()=> {\n       \n\n  //   if (!this.state.artistName){\n  //     console.log(\"no result\")\n  //   } else {\n  //   axios({\n  //     method: \"get\",\n  //     url: `https://www.theaudiodb.com/api/v1/json/195187/search.php?s=${this.state.artistName}`\n  //     //\n  //   })\n  //     .then(response => {\n        \n  //                         console.log(response);\n  //                         const artist =\n  //                           response.data.artists[0];\n  //                         this.setState({ artist });\n                        \n  //                       })\n  //     .catch(error => {});\n  //                     }\n  // }","import React, { Component } from \"react\";\nimport $ from \"jquery\";\nimport Popper from 'popper.js';\nimport \"../node_modules/bootstrap/dist/css/bootstrap.min.css\";\nimport \"../node_modules/bootstrap/dist/js/bootstrap.js\";\nimport './styles.css'\nimport \"./App.css\";\nimport { Route, Link } from \"react-router-dom\";\n// import components\nimport Search from './Search'\nimport TopAlbums from './TopAlbums'\nimport TopTracks from './TopTracks'\nimport Track from \"./Track\";\nimport Album from \"./Album\";\nimport Artist from \"./Artist\";\n\n\n\n\nclass App extends Component {\n\n  render() {\n\n    const Main = () => (\n      <div className=\"App\">\n        <header>\n          <h1 className=\"header\">HLNA Records</h1>\n        </header>\n        <div className=\"image\" />\n        <div className=\"container\">\n          <h1 className=\"tracks\">Top Tracks</h1>\n\n          <TopTracks />\n          <br />\n\n          <h1 className=\"albums\">Top Albums</h1>\n          <TopAlbums />\n          <br />\n          <Search />\n        </div>\n      </div>\n    );\n    return (\n      <React.Fragment>\n\n        <Route exact path=\"/track/:id\" component={Track} />\n        <Route exact path=\"/album/:id\" component={Album} />\n        <Route exact path=\"/artist/:name\" component={Artist} />\n        <Route exact path=\"/search/:name\" component={Search} />\n        <Route exact path=\"/\" component={Main} />\n      </React.Fragment>\n    );\n      \n  }\n  \n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { HashRouter } from \"react-router-dom\";\nconst AppJsx = (\n  <HashRouter>\n    <App />\n  </HashRouter>\n);\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(AppJsx, rootElement);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}